<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="3">
    <Box name="root" id="-1" tooltip="Root box of Choregraphe&apos;s project. Highest level possible." x="0" y="0">
        <bitmap>media/images/box/root.png</bitmap>
        <script language="4">
            <content>
                <![CDATA[]]>
</content>
        </script>
        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
        <Timeline enable="0">
            <BehaviorLayer name="behavior_layer1">
                <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                        <Box name="Enthusiastic_1" id="1" tooltip="style:&#x0A;happy; fun&#x0A;tags:&#x0A;enthusiastic; happy; keen; rapturous; crazy; zestful" x="751" y="8">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.oldfps = ALFrameManager.getTimelineFps(self.getName())
        try:
            frameNumber.increaseParent( self.getName() );
        except BaseException, err:
            # if you don't want to use some encapsulated sub box, you will in that case. no worry...
            pass

    def onLoad(self):
        #puts code for box cleanup here
        pass

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        newfps = (self.oldfps * self.getParameter("FPS (%)")) / 100
        ALFrameManager.setTimelineFps(self.getName(), newfps)
        pass

    def onInput_onStop(self):
        ""]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                            <Parameter name="FPS (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="20" max="200" tooltip="" id="5" />
                            <Timeline enable="1" fps="25" start_frame="0" end_frame="-1" size="300">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="FaceLeds" index="1">
                                        <Diagram scale="100">
                                            <Box name="enthusiastic" id="1" tooltip="enthusiastic" x="101" y="36">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.bMustStop = False;
        self.bIsRunning = False;

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        self.onInput_onStop();

    def onInput_onStart(self):
        if( self.bIsRunning ):
              
            return;        

        rDuration = 0.1;
        self.bMustStop = False;
        self.bIsRunning = True;
        
        while( not self.bMustStop ):
            ALLeds.post.fadeRGB( "FaceLed0", 0x1111ff, rDuration );
            ALLeds.post.fadeRGB( "FaceLed1", 0xffccff, rDuration );
            ALLeds.post.fadeRGB( "FaceLed2", 0x1111ff, rDuration );
            ALLeds.post.fadeRGB( "FaceLed3", 0xffccff, rDuration );
            ALLeds.post.fadeRGB( "FaceLed4", 0x1111ff, rDuration );
            ALLeds.post.fadeRGB( "FaceLed5", 0xffccff, rDuration );
            ALLeds.post.fadeRGB( "FaceLed6", 0x1111ff, rDuration );
            ALLeds.post.fadeRGB( "FaceLed7", 0xffccff, rDuration );
        
            #time.sleep( 0.1 );
            
            ALLeds.post.fadeRGB( "FaceLed0", 0xffccff, rDuration*4 );
            ALLeds.post.fadeRGB( "FaceLed1", 0x1111ff, rDuration*4 );
            ALLeds.post.fadeRGB( "FaceLed2", 0xffccff, rDuration*4 );
            ALLeds.post.fadeRGB( "FaceLed3", 0x1111ff, rDuration*4 );
            ALLeds.post.fadeRGB( "FaceLed4", 0xffccff, rDuration*4 );
            ALLeds.post.fadeRGB( "FaceLed5", 0x1111ff, rDuration*4 );
            ALLeds.post.fadeRGB( "FaceLed6", 0xffccff, rDuration*4 );
            ALLeds.fadeRGB( "FaceLed7", 0x1111ff, rDuration*4 );
        
            if( self.bMustStop ):
                break;   
                
        self.bIsRunning = False;
        self.onStopped();
        
    def onInput_onStop(self):
        self.bMustStop = True;]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList model="Nao">
                                    <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" unit="-1">
                                        <Key frame="17" value="-0.00240423" />
                                        <Key frame="29" value="0.441863" />
                                        <Key frame="47" value="-0.705538" />
                                        <Key frame="79" value="-1.49656" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" unit="-1">
                                        <Key frame="17" value="17.4881" />
                                        <Key frame="29" value="18.9822" />
                                        <Key frame="47" value="-14" />
                                        <Key frame="79" value="-12.483" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" unit="-1">
                                        <Key frame="15" value="80.7701" />
                                        <Key frame="27" value="78.7534" />
                                        <Key frame="45" value="95.7996" />
                                        <Key frame="77" value="85.7799" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" unit="-1">
                                        <Key frame="15" value="23.9041" />
                                        <Key frame="27" value="19.2507" />
                                        <Key frame="45" value="12.9177" />
                                        <Key frame="77" value="4.74375" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" unit="-1">
                                        <Key frame="15" value="-48.3429" />
                                        <Key frame="27" value="-56.7757" />
                                        <Key frame="45" value="-79.4565" />
                                        <Key frame="77" value="-65.6575" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" unit="-1">
                                        <Key frame="15" value="-71.893" />
                                        <Key frame="27" value="-88.6852" />
                                        <Key frame="45" value="-35.7695" />
                                        <Key frame="77" value="-21.8826" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" unit="-1">
                                        <Key frame="15" value="-8.44001" />
                                        <Key frame="27" value="-8.61579" />
                                        <Key frame="45" value="-10.7252" />
                                        <Key frame="77" value="-8.26423" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" unit="-1">
                                        <Key frame="15" value="0.109481" />
                                        <Key frame="27" value="0.110572" />
                                        <Key frame="45" value="0.696364" />
                                        <Key frame="77" value="0.109844" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="-1">
                                        <Key frame="13" value="78.7534" />
                                        <Key frame="25" value="80.7701" />
                                        <Key frame="43" value="98.0896" />
                                        <Key frame="75" value="88.8609" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="-1">
                                        <Key frame="13" value="-19.3386" />
                                        <Key frame="25" value="-23.8163" />
                                        <Key frame="43" value="-11.5162" />
                                        <Key frame="75" value="-2.1997" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="-1">
                                        <Key frame="13" value="56.7757" />
                                        <Key frame="25" value="48.3429" />
                                        <Key frame="43" value="85.692" />
                                        <Key frame="75" value="85.7799" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="-1">
                                        <Key frame="13" value="88.6852" />
                                        <Key frame="25" value="71.893" />
                                        <Key frame="43" value="45.003" />
                                        <Key frame="75" value="25.491" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="-1">
                                        <Key frame="13" value="-0.178188" />
                                        <Key frame="25" value="-0.090296" />
                                        <Key frame="43" value="0.964405" />
                                        <Key frame="75" value="-0.705538" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="-1">
                                        <Key frame="13" value="0.223298" />
                                        <Key frame="25" value="0.224753" />
                                        <Key frame="43" value="0.618182" />
                                        <Key frame="75" value="0.221844" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" unit="-1">
                                        <Key frame="14" value="-19.8611" />
                                        <Key frame="26" value="-19.7732" />
                                        <Key frame="44" value="-18.6306" />
                                        <Key frame="76" value="-18.367" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" unit="-1">
                                        <Key frame="14" value="4.22121" />
                                        <Key frame="26" value="-0.79343" />
                                        <Key frame="44" value="5.62747" />
                                        <Key frame="76" value="5.53958" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" unit="-1">
                                        <Key frame="14" value="-19.7732" />
                                        <Key frame="26" value="-21.7117" />
                                        <Key frame="44" value="12.0436" />
                                        <Key frame="76" value="12.1315" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" unit="-1">
                                        <Key frame="14" value="36.1211" />
                                        <Key frame="26" value="39.9931" />
                                        <Key frame="44" value="-5.18802" />
                                        <Key frame="76" value="-5.18802" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" unit="-1">
                                        <Key frame="14" value="-9.31893" />
                                        <Key frame="26" value="-12.1267" />
                                        <Key frame="44" value="6.76526" />
                                        <Key frame="76" value="6.67737" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" unit="-1">
                                        <Key frame="14" value="-5.88634" />
                                        <Key frame="26" value="0.876513" />
                                        <Key frame="44" value="-5.00742" />
                                        <Key frame="76" value="-5.00742" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" unit="-1">
                                        <Key frame="14" value="0.969213" />
                                        <Key frame="26" value="-4.22121" />
                                        <Key frame="44" value="-3.42537" />
                                        <Key frame="76" value="-3.60116" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" unit="-1">
                                        <Key frame="14" value="-21.7996" />
                                        <Key frame="26" value="-19.6853" />
                                        <Key frame="44" value="11.7751" />
                                        <Key frame="76" value="12.2145" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" unit="-1">
                                        <Key frame="14" value="40.081" />
                                        <Key frame="26" value="36.1211" />
                                        <Key frame="44" value="-4.39218" />
                                        <Key frame="76" value="-4.56797" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" unit="-1">
                                        <Key frame="14" value="-12.2145" />
                                        <Key frame="26" value="-9.40682" />
                                        <Key frame="44" value="6.59428" />
                                        <Key frame="76" value="6.33061" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" unit="-1">
                                        <Key frame="14" value="-0.964405" />
                                        <Key frame="26" value="5.88634" />
                                        <Key frame="44" value="2.90283" />
                                        <Key frame="76" value="2.81494" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                            <Resource name="Standing" type="Lock" timeout="2" />
                            <Resource name="Left eye" type="Lock" timeout="2" />
                            <Resource name="Right eye" type="Lock" timeout="2" />
                            <Resource name="HeadYaw" type="Lock" timeout="2" />
                            <Resource name="HeadPitch" type="Lock" timeout="2" />
                            <Resource name="LShoulderPitch" type="Lock" timeout="2" />
                            <Resource name="LShoulderRoll" type="Lock" timeout="2" />
                            <Resource name="LElbowRoll" type="Lock" timeout="2" />
                            <Resource name="LElbowYaw" type="Lock" timeout="2" />
                            <Resource name="LWristYaw" type="Lock" timeout="2" />
                            <Resource name="LHand" type="Lock" timeout="2" />
                            <Resource name="RShoulderPitch" type="Lock" timeout="2" />
                            <Resource name="RShoulderRoll" type="Lock" timeout="2" />
                            <Resource name="RElbowRoll" type="Lock" timeout="2" />
                            <Resource name="RElbowYaw" type="Lock" timeout="2" />
                            <Resource name="RWristYaw" type="Lock" timeout="2" />
                            <Resource name="RHand" type="Lock" timeout="2" />
                            <Resource name="LHipYawPitch" type="Lock" timeout="2" />
                            <Resource name="LHipRoll" type="Lock" timeout="2" />
                            <Resource name="LHipPitch" type="Lock" timeout="2" />
                            <Resource name="LKneePitch" type="Lock" timeout="2" />
                            <Resource name="LAnklePitch" type="Lock" timeout="2" />
                            <Resource name="LAnkleRoll" type="Lock" timeout="2" />
                            <Resource name="RHipRoll" type="Lock" timeout="2" />
                            <Resource name="RHipPitch" type="Lock" timeout="2" />
                            <Resource name="RKneePitch" type="Lock" timeout="2" />
                            <Resource name="RAnklePitch" type="Lock" timeout="2" />
                            <Resource name="RAnkleRoll" type="Lock" timeout="2" />
                        </Box>
                        <Box name="Enthusiastic_3" id="30" tooltip="style:&#x0A;happy; fun&#x0A;tags:&#x0A;enthusiastic; rapturous; rousing; warm; zestful; raring; happy" x="742" y="271">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.oldfps = ALFrameManager.getTimelineFps(self.getName())
        try:
            frameNumber.increaseParent( self.getName() );
        except BaseException, err:
            # if you don't want to use some encapsulated sub box, you will in that case. no worry...
            pass

    def onLoad(self):
        #puts code for box cleanup here
        pass

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        newfps = (self.oldfps * self.getParameter("FPS (%)")) / 100
        ALFrameManager.setTimelineFps(self.getName(), newfps)
        pass

    def onInput_onStop(self):
        ""]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                            <Parameter name="FPS (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="20" max="200" tooltip="" id="5" />
                            <Timeline enable="1" fps="25" start_frame="0" end_frame="-1" size="300">
                                <ActuatorList model="Nao">
                                    <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" unit="-1">
                                        <Key frame="18" value="-33.2255" />
                                        <Key frame="30" value="7.99574" />
                                        <Key frame="43" value="-24.0847" />
                                        <Key frame="60" value="-3.60596" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" unit="-1">
                                        <Key frame="18" value="-0.353971" />
                                        <Key frame="30" value="-1.67235" />
                                        <Key frame="43" value="3.51326" />
                                        <Key frame="60" value="-5.62747" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" unit="-1">
                                        <Key frame="16" value="91.3171" />
                                        <Key frame="28" value="55.8088" />
                                        <Key frame="41" value="29.4413" />
                                        <Key frame="58" value="55.9846" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" unit="-1">
                                        <Key frame="16" value="18.4549" />
                                        <Key frame="28" value="8.52309" />
                                        <Key frame="41" value="0.498473" />
                                        <Key frame="58" value="2.107" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" unit="-1">
                                        <Key frame="16" value="-103.363" />
                                        <Key frame="28" value="-39.8174" />
                                        <Key frame="41" value="-28.3914" />
                                        <Key frame="58" value="-39.4658" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" unit="-1">
                                        <Key frame="16" value="-60.1155" />
                                        <Key frame="28" value="-88.5925" />
                                        <Key frame="41" value="-83.0553" />
                                        <Key frame="58" value="-82.2643" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" unit="-1">
                                        <Key frame="28" value="12" />
                                        <Key frame="58" value="-38" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" unit="-1">
                                        <Key frame="28" value="0.241818" />
                                        <Key frame="58" value="0.305455" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="-1">
                                        <Key frame="14" value="89.4762" />
                                        <Key frame="26" value="67.0638" />
                                        <Key frame="39" value="71.8978" />
                                        <Key frame="56" value="79.1928" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="-1">
                                        <Key frame="14" value="-17.9323" />
                                        <Key frame="26" value="-4.66067" />
                                        <Key frame="39" value="-2.46337" />
                                        <Key frame="56" value="-2.55126" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="-1">
                                        <Key frame="14" value="116.981" />
                                        <Key frame="26" value="36.8242" />
                                        <Key frame="39" value="29.8808" />
                                        <Key frame="56" value="37.7031" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="-1">
                                        <Key frame="14" value="36.038" />
                                        <Key frame="26" value="66.3607" />
                                        <Key frame="39" value="54.1437" />
                                        <Key frame="56" value="45.2666" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="-1">
                                        <Key frame="26" value="-34.5" />
                                        <Key frame="56" value="32" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="-1">
                                        <Key frame="26" value="0.214545" />
                                        <Key frame="56" value="0.272727" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" unit="-1">
                                        <Key frame="27" value="-19.5975" />
                                        <Key frame="57" value="-20.8279" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" unit="-1">
                                        <Key frame="27" value="9.93417" />
                                        <Key frame="57" value="12.1315" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" unit="-1">
                                        <Key frame="27" value="24.0847" />
                                        <Key frame="57" value="21.6238" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" unit="-1">
                                        <Key frame="27" value="-3.69386" />
                                        <Key frame="57" value="-4.22121" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" unit="-1">
                                        <Key frame="27" value="-0.090296" />
                                        <Key frame="57" value="0.524946" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" unit="-1">
                                        <Key frame="27" value="-7.29261" />
                                        <Key frame="57" value="-9.22623" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" unit="-1">
                                        <Key frame="27" value="-8.08363" />
                                        <Key frame="57" value="-4.2164" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" unit="-1">
                                        <Key frame="27" value="24.0799" />
                                        <Key frame="57" value="22.0584" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" unit="-1">
                                        <Key frame="27" value="-5.90622" />
                                        <Key frame="57" value="-5.90622" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" unit="-1">
                                        <Key frame="27" value="2.90283" />
                                        <Key frame="57" value="2.99072" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" unit="-1">
                                        <Key frame="27" value="5.45169" />
                                        <Key frame="57" value="3.34229" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                            <Resource name="Standing" type="Lock" timeout="2" />
                            <Resource name="HeadYaw" type="Lock" timeout="2" />
                            <Resource name="HeadPitch" type="Lock" timeout="2" />
                            <Resource name="LShoulderPitch" type="Lock" timeout="2" />
                            <Resource name="LShoulderRoll" type="Lock" timeout="2" />
                            <Resource name="LElbowRoll" type="Lock" timeout="2" />
                            <Resource name="LElbowYaw" type="Lock" timeout="2" />
                            <Resource name="LWristYaw" type="Lock" timeout="2" />
                            <Resource name="LHand" type="Lock" timeout="2" />
                            <Resource name="RShoulderPitch" type="Lock" timeout="2" />
                            <Resource name="RShoulderRoll" type="Lock" timeout="2" />
                            <Resource name="RElbowRoll" type="Lock" timeout="2" />
                            <Resource name="RElbowYaw" type="Lock" timeout="2" />
                            <Resource name="RWristYaw" type="Lock" timeout="2" />
                            <Resource name="RHand" type="Lock" timeout="2" />
                            <Resource name="LHipYawPitch" type="Lock" timeout="2" />
                            <Resource name="LHipRoll" type="Lock" timeout="2" />
                            <Resource name="LHipPitch" type="Lock" timeout="2" />
                            <Resource name="LKneePitch" type="Lock" timeout="2" />
                            <Resource name="LAnklePitch" type="Lock" timeout="2" />
                            <Resource name="LAnkleRoll" type="Lock" timeout="2" />
                            <Resource name="RHipRoll" type="Lock" timeout="2" />
                            <Resource name="RHipPitch" type="Lock" timeout="2" />
                            <Resource name="RKneePitch" type="Lock" timeout="2" />
                            <Resource name="RAnklePitch" type="Lock" timeout="2" />
                            <Resource name="RAnkleRoll" type="Lock" timeout="2" />
                        </Box>
                        <Box name="Enthusiastic_5" id="19" tooltip="style:&#x0A;happy&#x0A;tags:&#x0A;enthusiastic; rapturous; rousing; warm; zestful; raring; happy" x="759" y="582">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.oldfps = ALFrameManager.getTimelineFps(self.getName())
        try:
            frameNumber.increaseParent( self.getName() );
        except BaseException, err:
            # if you don't want to use some encapsulated sub box, you will in that case. no worry...
            pass

    def onLoad(self):
        #puts code for box cleanup here
        pass

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        newfps = (self.oldfps * self.getParameter("FPS (%)")) / 100
        ALFrameManager.setTimelineFps(self.getName(), newfps)
        pass

    def onInput_onStop(self):
        ""]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Animation starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Animation stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when animation is finished." id="4" />
                            <Parameter name="FPS (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="20" max="200" tooltip="" id="5" />
                            <Timeline enable="1" fps="25" start_frame="0" end_frame="-1" size="300">
                                <ActuatorList model="Nao">
                                    <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" unit="-1">
                                        <Key frame="28" value="-2.11181" />
                                        <Key frame="44" value="-0.969213" />
                                        <Key frame="67" value="-2.1997" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" unit="-1">
                                        <Key frame="17" value="20.1" />
                                        <Key frame="28" value="7.02893" />
                                        <Key frame="44" value="2.45856" />
                                        <Key frame="67" value="2.37067" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" unit="-1">
                                        <Key frame="8" value="53.1721" />
                                        <Key frame="15" value="100.282" />
                                        <Key frame="26" value="57.3909" />
                                        <Key frame="42" value="42.8888" />
                                        <Key frame="65" value="85.2526" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" unit="-1">
                                        <Key frame="8" value="0.349163" />
                                        <Key frame="15" value="11.072" />
                                        <Key frame="26" value="-1.93602" />
                                        <Key frame="42" value="1.93121" />
                                        <Key frame="65" value="3.60116" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" unit="-1">
                                        <Key frame="8" value="-75.5014" />
                                        <Key frame="15" value="-69.5248" />
                                        <Key frame="26" value="-101.869" />
                                        <Key frame="42" value="-111.713" />
                                        <Key frame="65" value="-64.7786" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" unit="-1">
                                        <Key frame="8" value="-49.9201" />
                                        <Key frame="15" value="-88.5" />
                                        <Key frame="26" value="-76.2876" />
                                        <Key frame="42" value="-66.268" />
                                        <Key frame="65" value="-22.7616" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" unit="-1">
                                        <Key frame="8" value="-9.49471" />
                                        <Key frame="15" value="2.01911" />
                                        <Key frame="26" value="-59.4172" />
                                        <Key frame="42" value="-59.1535" />
                                        <Key frame="65" value="-7.64898" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" unit="-1">
                                        <Key frame="8" value="0.1" />
                                        <Key frame="15" value="0.1" />
                                        <Key frame="26" value="0.6104" />
                                        <Key frame="42" value="0.8" />
                                        <Key frame="65" value="0.1112" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="-1">
                                        <Key frame="6" value="100.463" />
                                        <Key frame="13" value="58.2746" />
                                        <Key frame="24" value="64.0755" />
                                        <Key frame="40" value="51.6827" />
                                        <Key frame="63" value="90.5309" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="-1">
                                        <Key frame="6" value="-11.1647" />
                                        <Key frame="13" value="-8.70368" />
                                        <Key frame="24" value="-3.2544" />
                                        <Key frame="40" value="-8.17633" />
                                        <Key frame="63" value="-3.07861" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="-1">
                                        <Key frame="6" value="58.8851" />
                                        <Key frame="13" value="59.0608" />
                                        <Key frame="24" value="104.149" />
                                        <Key frame="40" value="113.378" />
                                        <Key frame="63" value="85.6041" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="-1">
                                        <Key frame="6" value="76.1166" />
                                        <Key frame="13" value="49.1339" />
                                        <Key frame="24" value="80.4233" />
                                        <Key frame="40" value="65.3938" />
                                        <Key frame="63" value="26.4578" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="-1">
                                        <Key frame="6" value="-5.71537" />
                                        <Key frame="13" value="9.31412" />
                                        <Key frame="24" value="52.5569" />
                                        <Key frame="40" value="56.8635" />
                                        <Key frame="63" value="0.612838" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="-1">
                                        <Key frame="6" value="0.1" />
                                        <Key frame="13" value="0.1" />
                                        <Key frame="24" value="0.6" />
                                        <Key frame="40" value="0.8" />
                                        <Key frame="63" value="0.2244" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" unit="-1">
                                        <Key frame="14" value="-18.9822" />
                                        <Key frame="25" value="-18.4549" />
                                        <Key frame="41" value="-18.4549" />
                                        <Key frame="64" value="-18.1033" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" unit="-1">
                                        <Key frame="14" value="9.05525" />
                                        <Key frame="25" value="16.6139" />
                                        <Key frame="41" value="16.6139" />
                                        <Key frame="64" value="5.62747" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" unit="-1">
                                        <Key frame="14" value="-15.9939" />
                                        <Key frame="25" value="8.79158" />
                                        <Key frame="41" value="8.79158" />
                                        <Key frame="64" value="11.9557" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" unit="-1">
                                        <Key frame="14" value="26.1014" />
                                        <Key frame="25" value="0.876513" />
                                        <Key frame="41" value="1.0523" />
                                        <Key frame="64" value="-5.27591" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" unit="-1">
                                        <Key frame="14" value="-4.13332" />
                                        <Key frame="25" value="4.48007" />
                                        <Key frame="41" value="4.48007" />
                                        <Key frame="64" value="6.94104" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" unit="-1">
                                        <Key frame="14" value="-9.22623" />
                                        <Key frame="25" value="-12.7419" />
                                        <Key frame="41" value="-12.7419" />
                                        <Key frame="64" value="-5.00742" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" unit="-1">
                                        <Key frame="14" value="3.34229" />
                                        <Key frame="25" value="5.97904" />
                                        <Key frame="41" value="5.97904" />
                                        <Key frame="64" value="-3.51326" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" unit="-1">
                                        <Key frame="14" value="-16.4382" />
                                        <Key frame="25" value="13.0056" />
                                        <Key frame="41" value="12.9177" />
                                        <Key frame="64" value="12.4782" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" unit="-1">
                                        <Key frame="14" value="32.2587" />
                                        <Key frame="25" value="0.79343" />
                                        <Key frame="41" value="0.79343" />
                                        <Key frame="64" value="-4.56797" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" unit="-1">
                                        <Key frame="14" value="-10.193" />
                                        <Key frame="25" value="1.23289" />
                                        <Key frame="41" value="1.23289" />
                                        <Key frame="64" value="6.06693" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" unit="-1">
                                        <Key frame="14" value="-2.107" />
                                        <Key frame="25" value="-3.86483" />
                                        <Key frame="41" value="-3.86483" />
                                        <Key frame="64" value="2.63916" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                            <Resource name="Standing" type="Lock" timeout="2" />
                            <Resource name="All motors" type="Lock" timeout="2" />
                        </Box>
                        <Box name="Say" id="2" tooltip="Say some text. Note that you must open the box to enter the text." x="813" y="147">
                            <bitmap>media/images/box/interaction/say.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                            <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                            <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="85" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                            <Box name="Say Text" id="2" tooltip="Say the text received on its input." x="422" y="65">
                                                <bitmap>media/images/box/interaction/say.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []
        
    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                            </Box>
                                            <Box name="Localized Text" id="5" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                                <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 你好 ",
			"English" : " Hello ",
			"French" : " Bonjour ",
			"German" : " Hallo ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Portuguese" : " Olá ",
			"Brazilian" : " Olá ",
			"Spanish" : " Hola ",
			"Arabic" : " مرحبا ",
			"Polish" : " Cześć ",
			"Czech" : " Ahoj ",
			"Dutch" : " Wow, fantastisch! ",
			"Danish" : " Hej ",
			"Finnish" : " Hei ",
			"Swedish" : " Hallå ",
			"Russian" : " Привет ",
			"Turkish" : " Merhaba "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <chinese>你好</chinese>
                                                    <english>Hello</english>
                                                    <french>Bonjour</french>
                                                    <german>Hallo</german>
                                                    <italian>Ciao</italian>
                                                    <japanese>こんにちは</japanese>
                                                    <korean>안녕하세요</korean>
                                                    <portuguese>Olá</portuguese>
                                                    <brazilian>Olá</brazilian>
                                                    <spanish>Hola</spanish>
                                                    <arabic>مرحبا</arabic>
                                                    <polish>Cześć</polish>
                                                    <czech>Ahoj</czech>
                                                    <dutch>Wow, fantastisch!</dutch>
                                                    <danish>Hej</danish>
                                                    <finnish>Hei</finnish>
                                                    <swedish>Hallå</swedish>
                                                    <russian>Привет</russian>
                                                    <turkish>Merhaba</turkish>
                                                    <language>13</language>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                            </Box>
                                            <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                            <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                        </Box>
                        <Box name="Wait" id="3" tooltip="Wait a moment before sending a signal on the output. The wait can be stopped any&#x0A;time. You may restart it any time, and it will start again." x="667" y="154">
                            <bitmap>media/images/box/wait.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[import threading

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onLoad(self):
        self.tb = False

    def onUnload(self):
        if( self.tb ):
            self.tb.cancel()
            self.tb = False

    def triggerOutput( self, rPeriod = 1 ):
        self.onUnload() # to clean everything
        self.timerOutput()

    def startTimer( self, rPeriod = 1 ):
        if( self.tb ):
            self.tb.cancel()
        self.tb = threading.Timer( rPeriod, self.triggerOutput, [rPeriod] )
        self.tb.start()

    def onInput_onStart(self):
        self.startTimer( self.getParameter("Timeout (s)") )

    def onInput_onStop(self):
        bRunning = self.tb
        self.onUnload()
        if( bRunning and self.getParameter("Trigger timerOutput if cancelled")):
            self.timerOutput()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                            <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is ellapsed, or if the box is stopped." id="4" />
                            <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                            <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="6" />
                        </Box>
                        <Box name="Wait For Signals" id="4" tooltip="Wait for both inputs to be stimulated before stimulating its output." x="967" y="64">
                            <bitmap>media/images/box/wait.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onLoad(self):
        self.ok = [False]*2

    def onUnload(self):
        #puts code for box cleanup here
        ""
        
    def onStart(self, nInput):
        self.ok[nInput-1] = True
        bOutput = True
        for bOk in self.ok:
            bOutput = bOutput and bOk
        if( bOutput ):
            self.ok = [False]*2
            self.signalsReceived()

    def onInput_signal1(self):
        self.onStart(1)

    def onInput_signal2(self):
        self.onStart(2)]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="signal1" type="1" type_size="1" nature="1" inner="0" tooltip="First signal to wait." id="2" />
                            <Input name="signal2" type="1" type_size="1" nature="1" inner="0" tooltip="Second signal to wait." id="3" />
                            <Output name="signalsReceived" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when both inputs have been stimulated." id="4" />
                        </Box>
                        <Box name="Say" id="5" tooltip="Say some text. Note that you must open the box to enter the text." x="828" y="436">
                            <bitmap>media/images/box/interaction/say.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                            <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                            <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="85" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                            <Box name="Say Text" id="2" tooltip="Say the text received on its input." x="422" y="65">
                                                <bitmap>media/images/box/interaction/say.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []
        
    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                            </Box>
                                            <Box name="Localized Text" id="5" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                                <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 你好 ",
			"English" : " Hello ",
			"French" : " Bonjour ",
			"German" : " Hallo ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Portuguese" : " Olá ",
			"Brazilian" : " Olá ",
			"Spanish" : " Hola ",
			"Arabic" : " مرحبا ",
			"Polish" : " Cześć ",
			"Czech" : " Ahoj ",
			"Dutch" : " Jij bent hier heel erg goed in! ",
			"Danish" : " Hej ",
			"Finnish" : " Hei ",
			"Swedish" : " Hallå ",
			"Russian" : " Привет ",
			"Turkish" : " Merhaba "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <chinese>你好</chinese>
                                                    <english>Hello</english>
                                                    <french>Bonjour</french>
                                                    <german>Hallo</german>
                                                    <italian>Ciao</italian>
                                                    <japanese>こんにちは</japanese>
                                                    <korean>안녕하세요</korean>
                                                    <portuguese>Olá</portuguese>
                                                    <brazilian>Olá</brazilian>
                                                    <spanish>Hola</spanish>
                                                    <arabic>مرحبا</arabic>
                                                    <polish>Cześć</polish>
                                                    <czech>Ahoj</czech>
                                                    <dutch>Jij bent hier heel erg goed in!</dutch>
                                                    <danish>Hej</danish>
                                                    <finnish>Hei</finnish>
                                                    <swedish>Hallå</swedish>
                                                    <russian>Привет</russian>
                                                    <turkish>Merhaba</turkish>
                                                    <language>13</language>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                            </Box>
                                            <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                            <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                        </Box>
                        <Box name="Wait" id="6" tooltip="Wait a moment before sending a signal on the output. The wait can be stopped any&#x0A;time. You may restart it any time, and it will start again." x="676" y="434">
                            <bitmap>media/images/box/wait.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[import threading

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onLoad(self):
        self.tb = False

    def onUnload(self):
        if( self.tb ):
            self.tb.cancel()
            self.tb = False

    def triggerOutput( self, rPeriod = 1 ):
        self.onUnload() # to clean everything
        self.timerOutput()

    def startTimer( self, rPeriod = 1 ):
        if( self.tb ):
            self.tb.cancel()
        self.tb = threading.Timer( rPeriod, self.triggerOutput, [rPeriod] )
        self.tb.start()

    def onInput_onStart(self):
        self.startTimer( self.getParameter("Timeout (s)") )

    def onInput_onStop(self):
        bRunning = self.tb
        self.onUnload()
        if( bRunning and self.getParameter("Trigger timerOutput if cancelled")):
            self.timerOutput()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                            <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is ellapsed, or if the box is stopped." id="4" />
                            <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                            <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="6" />
                        </Box>
                        <Box name="Wait For Signals" id="7" tooltip="Wait for both inputs to be stimulated before stimulating its output." x="981" y="349">
                            <bitmap>media/images/box/wait.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onLoad(self):
        self.ok = [False]*2

    def onUnload(self):
        #puts code for box cleanup here
        ""
        
    def onStart(self, nInput):
        self.ok[nInput-1] = True
        bOutput = True
        for bOk in self.ok:
            bOutput = bOutput and bOk
        if( bOutput ):
            self.ok = [False]*2
            self.signalsReceived()

    def onInput_signal1(self):
        self.onStart(1)

    def onInput_signal2(self):
        self.onStart(2)]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="signal1" type="1" type_size="1" nature="1" inner="0" tooltip="First signal to wait." id="2" />
                            <Input name="signal2" type="1" type_size="1" nature="1" inner="0" tooltip="Second signal to wait." id="3" />
                            <Output name="signalsReceived" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when both inputs have been stimulated." id="4" />
                        </Box>
                        <Box name="Say" id="8" tooltip="Say some text. Note that you must open the box to enter the text." x="833" y="743">
                            <bitmap>media/images/box/interaction/say.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                            <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                            <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="85" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                            <Box name="Say Text" id="2" tooltip="Say the text received on its input." x="422" y="65">
                                                <bitmap>media/images/box/interaction/say.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []
        
    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                            </Box>
                                            <Box name="Localized Text" id="5" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                                <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 你好 ",
			"English" : " Hello ",
			"French" : " Bonjour ",
			"German" : " Hallo ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Portuguese" : " Olá ",
			"Brazilian" : " Olá ",
			"Spanish" : " Hola ",
			"Arabic" : " مرحبا ",
			"Polish" : " Cześć ",
			"Czech" : " Ahoj ",
			"Dutch" : " Het is een eer om met jou te mogen spelen ",
			"Danish" : " Hej ",
			"Finnish" : " Hei ",
			"Swedish" : " Hallå ",
			"Russian" : " Привет ",
			"Turkish" : " Merhaba "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <chinese>你好</chinese>
                                                    <english>Hello</english>
                                                    <french>Bonjour</french>
                                                    <german>Hallo</german>
                                                    <italian>Ciao</italian>
                                                    <japanese>こんにちは</japanese>
                                                    <korean>안녕하세요</korean>
                                                    <portuguese>Olá</portuguese>
                                                    <brazilian>Olá</brazilian>
                                                    <spanish>Hola</spanish>
                                                    <arabic>مرحبا</arabic>
                                                    <polish>Cześć</polish>
                                                    <czech>Ahoj</czech>
                                                    <dutch>Het is een eer om met jou te mogen spelen</dutch>
                                                    <danish>Hej</danish>
                                                    <finnish>Hei</finnish>
                                                    <swedish>Hallå</swedish>
                                                    <russian>Привет</russian>
                                                    <turkish>Merhaba</turkish>
                                                    <language>13</language>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                            </Box>
                                            <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                            <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                        </Box>
                        <Box name="Wait" id="9" tooltip="Wait a moment before sending a signal on the output. The wait can be stopped any&#x0A;time. You may restart it any time, and it will start again." x="683" y="742">
                            <bitmap>media/images/box/wait.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[import threading

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onLoad(self):
        self.tb = False

    def onUnload(self):
        if( self.tb ):
            self.tb.cancel()
            self.tb = False

    def triggerOutput( self, rPeriod = 1 ):
        self.onUnload() # to clean everything
        self.timerOutput()

    def startTimer( self, rPeriod = 1 ):
        if( self.tb ):
            self.tb.cancel()
        self.tb = threading.Timer( rPeriod, self.triggerOutput, [rPeriod] )
        self.tb.start()

    def onInput_onStart(self):
        self.startTimer( self.getParameter("Timeout (s)") )

    def onInput_onStop(self):
        bRunning = self.tb
        self.onUnload()
        if( bRunning and self.getParameter("Trigger timerOutput if cancelled")):
            self.timerOutput()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                            <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is ellapsed, or if the box is stopped." id="4" />
                            <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                            <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="6" />
                        </Box>
                        <Box name="Wait For Signals" id="10" tooltip="Wait for both inputs to be stimulated before stimulating its output." x="984" y="649">
                            <bitmap>media/images/box/wait.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onLoad(self):
        self.ok = [False]*2

    def onUnload(self):
        #puts code for box cleanup here
        ""
        
    def onStart(self, nInput):
        self.ok[nInput-1] = True
        bOutput = True
        for bOk in self.ok:
            bOutput = bOutput and bOk
        if( bOutput ):
            self.ok = [False]*2
            self.signalsReceived()

    def onInput_signal1(self):
        self.onStart(1)

    def onInput_signal2(self):
        self.onStart(2)]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="signal1" type="1" type_size="1" nature="1" inner="0" tooltip="First signal to wait." id="2" />
                            <Input name="signal2" type="1" type_size="1" nature="1" inner="0" tooltip="Second signal to wait." id="3" />
                            <Output name="signalsReceived" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when both inputs have been stimulated." id="4" />
                        </Box>
                        <Box name="Random Int." id="11" tooltip="Generate a random integer between a min number and a max number set as&#x0A;parameters.&#x0A;Note that the min and max numbers are included in the range of possible values." x="106" y="103">
                            <bitmap>media/images/box/box-script.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[import random

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nMin = 0
        self.nIndex = self.nMax - self.nMin
        self.aShuffled = []

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        nMax = self.getParameter("Max value")
        nMin = self.getParameter("Min value")
        if( nMin > nMax ):
            temp = nMin
            nMin = nMax
            nMax = temp
        # if shuffle
        if( self.getParameter("Shuffle") ):
            self.nIndex += 1
            if( self.nIndex > self.nMax - self.nMin or nMax != self.nMax or nMin != self.nMin ):
                self.nMax = nMax
                self.nMin = nMin
                self.nIndex = 0
                self.aShuffled = []
                for i in range( nMin, nMax + 1 ):
                    self.aShuffled.insert( random.randint(0, len(self.aShuffled)), i )
            self.output_RandomValue( self.aShuffled[self.nIndex] )
        # if not shuffle
        else:
            self.nIndex = self.nMax - self.nMin
            self.output_RandomValue( random.randint( nMin, nMax ) )]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Generate a random integer." id="2" />
                            <Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value obtained." id="3" />
                            <Parameter name="Min value" inherits_from_parent="0" content_type="1" value="1" default_value="0" min="0" max="1000" tooltip="The minimum value you can get." id="4" />
                            <Parameter name="Max value" inherits_from_parent="0" content_type="1" value="3" default_value="10" min="0" max="1000" tooltip="The maximum number you can get." id="5" />
                            <Parameter name="Shuffle" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="When this option is selected the box will give all the numbers between min and&#x0A;max before giving the same number twice." id="6" />
                        </Box>
                        <Box name="Switch Case" id="12" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;matching output, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="245" y="99">
                            <bitmap>media/images/box/interaction/choice.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion(1)):
			self.output_1(p)
		elif(p == self.typeConversion(2)):
			self.output_2(p)
		elif(p == self.typeConversion(3)):
			self.output_3(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
</content>
                            </script>
                            <pluginContent>
                                <keywords>
                                    <keyword>1</keyword>
                                    <keyword>2</keyword>
                                    <keyword>3</keyword>
                                    <keyword></keyword>
                                </keywords>
                            </pluginContent>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="0" type_size="1" nature="1" inner="0" tooltip="Value to test." id="2" />
                            <Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                            <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                            <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" />
                            <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" />
                        </Box>
                        <Box name="Set Language" id="13" tooltip="Select the language you would like NAO to speak and understand. Any following call to&#x0A;ALSpeechRecognition (Speech Reco. box for instance) or ALTextToSpeech (Say box&#x0A;for instance) will use this language." x="102" y="250">
                            <bitmap>media/images/box/interaction/say.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )
        self.tts = ALProxy("ALTextToSpeech")
        self.asr = ALProxy("ALSpeechRecognition")

    def onInput_onSet(self):
        self.asr.setLanguage( self.getParameter("Language") )
        self.tts.setLanguage( self.getParameter("Language") )
        self.onReady()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="The data is set when a signal is received on this input." id="2" />
                            <Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when the data has been set." id="3" />
                            <Parameter name="Language" inherits_from_parent="0" content_type="3" value="Dutch" default_value="English" custom_choice="1" tooltip="Set the language NAO speaks and understands." id="4">
                                <Choice value="Arabic" />
                                <Choice value="Brazilian" />
                                <Choice value="Chinese" />
                                <Choice value="Czech" />
                                <Choice value="Danish" />
                                <Choice value="Dutch" />
                                <Choice value="English" />
                                <Choice value="Finnish" />
                                <Choice value="French" />
                                <Choice value="German" />
                                <Choice value="Italian" />
                                <Choice value="Japanese" />
                                <Choice value="Korean" />
                                <Choice value="Polish" />
                                <Choice value="Portuguese" />
                                <Choice value="Russian" />
                                <Choice value="Spanish" />
                                <Choice value="Swedish" />
                                <Choice value="Turkish" />
                            </Parameter>
                        </Box>
                        <Link inputowner="2" indexofinput="2" outputowner="3" indexofoutput="4" />
                        <Link inputowner="4" indexofinput="2" outputowner="1" indexofoutput="4" />
                        <Link inputowner="4" indexofinput="3" outputowner="2" indexofoutput="4" />
                        <Link inputowner="5" indexofinput="2" outputowner="6" indexofoutput="4" />
                        <Link inputowner="7" indexofinput="2" outputowner="30" indexofoutput="4" />
                        <Link inputowner="7" indexofinput="3" outputowner="5" indexofoutput="4" />
                        <Link inputowner="8" indexofinput="2" outputowner="9" indexofoutput="4" />
                        <Link inputowner="10" indexofinput="3" outputowner="8" indexofoutput="4" />
                        <Link inputowner="10" indexofinput="2" outputowner="19" indexofoutput="4" />
                        <Link inputowner="0" indexofinput="4" outputowner="4" indexofoutput="4" />
                        <Link inputowner="0" indexofinput="4" outputowner="7" indexofoutput="4" />
                        <Link inputowner="0" indexofinput="4" outputowner="10" indexofoutput="4" />
                        <Link inputowner="11" indexofinput="2" outputowner="0" indexofoutput="2" />
                        <Link inputowner="12" indexofinput="2" outputowner="11" indexofoutput="3" />
                        <Link inputowner="1" indexofinput="2" outputowner="12" indexofoutput="4" />
                        <Link inputowner="3" indexofinput="2" outputowner="12" indexofoutput="4" />
                        <Link inputowner="30" indexofinput="2" outputowner="12" indexofoutput="5" />
                        <Link inputowner="6" indexofinput="2" outputowner="12" indexofoutput="5" />
                        <Link inputowner="19" indexofinput="2" outputowner="12" indexofoutput="6" />
                        <Link inputowner="9" indexofinput="2" outputowner="12" indexofoutput="6" />
                        <Link inputowner="13" indexofinput="2" outputowner="0" indexofoutput="2" />
                    </Diagram>
                </BehaviorKeyframe>
            </BehaviorLayer>
        </Timeline>
    </Box>
</ChoregrapheProject>
